# ********RoostGPT********

# Test generated by RoostGPT for test Karate-CSV using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /aisp/accounts/availability_post for http method type POST 
# RoostTestHash=f477236dc8
# 
# 

# ********RoostGPT********
Feature: Test aisp/accounts/availability API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Test POST /aisp/accounts/availability with valid payloads
    Given path '/aisp/accounts/availability'
    And headers '''{Authorization: '#(authToken)', 'Content-Type': 'application/json', 'x-fapi-auth-date': '<x-fapi-auth-date>', 'x-fapi-customer-ip-address': '<x-fapi-customer-ip-address>', 'x-fapi-interaction-id': '<x-fapi-interaction-id>', 'Accept-Language': '<Accept-Language>'}'''
    And request {"data": [{"paramName": "<paramName>", "paramValue": "<paramValue>"}]}
    When method post
    Then status 200
    And match response.data == '#array'
    And match response.data[0] == '#object'
    And match response.data[0].paramName == '#string'
    And match response.data[0].status == '#string'

    Examples:
      | read('aisp_accounts_availability_post.csv') |

  Scenario: Test POST /aisp/accounts/availability with invalid payloads
    Given path '/aisp/accounts/availability'
    And headers '''{Authorization: 'Bearer invalidToken', 'Content-Type': 'application/json'}'''
    And request {"data": [{"paramName": "testParam", "paramValue": "testValue"}]}
    When method post
    Then status 400
    And match response.id == '#string'
    And match response.errors == '#array'
    And match response.errors[0].code == '#string'
    And match response.errors[0].causes == '#string'
    And match response.errors[0].extendedDetails == '#object'
    And match response.headers['Content-Type'].description == 'Standard HTTP header indicating the format of the payload provided in the request. Content-type could be set to application/json.'
    And match response.headers['Content-Type'].schema.type == 'string'
    And match response.headers['x-fapi-interaction-id'].description == 'Unique correlation ID to playback response for each request.'
    And match response.headers['x-fapi-interaction-id'].schema.type == 'string'
