# ********RoostGPT********

# Test generated by RoostGPT for test Karate-Integration using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=ee0418c08a
# ROOST_METHOD_SIG_HASH=1c092be52c
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Diagnose and resolve WiFi interference issues',
#     steps: 'Given a customer with subscriber ID "SVTAL004" reports slow WiFi speeds\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate WiFi interference on the current channel\n' +
#       'When the support representative uses the configuration API to change the WiFi channel to an less congested one\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report improved WiFi speeds',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: WiFi Troubleshooting for Fiber Internet Customers

  Background:
    * def APPOINTMENT_V2_80D7DADBB1_URL = karate.properties['APPOINTMENT_V2_80D7DADBB1_URL'] || karate.get('APPOINTMENT_V2_80D7DADBB1_URL', 'http://localhost:4010')
    * def COMMUNICATIONMANAGEMENT_V2_B30FA28F22_URL = karate.properties['COMMUNICATIONMANAGEMENT_V2_B30FA28F22_URL'] || karate.get('COMMUNICATIONMANAGEMENT_V2_B30FA28F22_URL', 'http://localhost:4010')
    * def APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN = karate.properties['APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN'] || karate.get('APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN', 'Bearer_Dummy_Token')
    * def COMMUNICATIONMANAGEMENT_V2_B30FA28F22_AUTH_TOKEN = karate.properties['COMMUNICATIONMANAGEMENT_V2_B30FA28F22_AUTH_TOKEN'] || karate.get('COMMUNICATIONMANAGEMENT_V2_B30FA28F22_AUTH_TOKEN', 'Bearer_Dummy_Token')

  Scenario: Diagnose and resolve WiFi interference issues
    * url APPOINTMENT_V2_80D7DADBB1_URL
    And path 'searchTimeSlot'
    And param addressId = 123
    And param subscriberId = 'SVTAL004'
    And param associatedDocument = 'document001'
    And param startDate = '2023-04-01T08:00:00Z'
    And param finishDate = '2023-04-01T17:00:00Z'
    And param orderType = 'ChamadoTecnico'
    And param productType = ['Banda Larga']
    When method get
    Then status 200
    And match response.control.type == 'S'
    And match response.slots[0].id != null
    * def testId = response.slots[0].id
    * url APPOINTMENT_V2_80D7DADBB1_URL
    And path 'appointmentConfirmation'
    And request
      """
      {
        "appointment": {
          "confirmation": true,
          "id": "#(testId)"
        }
      }
      """
    When method post
    Then status 200
    And match response.control.type == 'S'
    * url APPOINTMENT_V2_80D7DADBB1_URL
    And path 'appointment/{appointmentId}'
    And pathParams appointmentId = '#(testId)'
    And request
      """
      {
        "appointment": {
          "reason": "WiFi interference detected",
          "slot": {
            "id": "#(testId)"
          }
        }
      }
      """
    When method patch
    Then status 200
    And match response.appointment.id != null
    And match response.appointment.startDate != null
    And match response.appointment.finishDate != null
    * print 'Customer reports improved WiFi speeds after channel change'
