# ********RoostGPT********

# Test generated by RoostGPT for test Karate-CSV using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /aisp/accounts/availability_post for http method type POST 
# RoostTestHash=f477236dc8
# 
# 

# ********RoostGPT********
Feature: Test /aisp/accounts/availability API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Test POST /aisp/accounts/availability API with valid payloads
    Given path '/aisp/accounts/availability'
    And headers {Authorization: '#(authToken)', 'Content-Type': 'application/json', 'x-fapi-auth-date': '#(fapiAuthDate)', 'x-fapi-customer-ip-address': '#(customerIp)', 'x-fapi-interaction-id': '#(interactionId)', 'Accept-Language': '#(language)'}
    And request {data: [{'paramName': '#(paramName)', 'paramValue': '#(paramValue)'}]}
    When method post
    Then status 200
    And match response.data[0].paramName == '#(paramName)'
    And match response.data[0].status == '#(status)'

    Examples:
      | read('aisp_accounts_availability_post.csv') |

  Scenario: Test POST /aisp/accounts/availability API with invalid payloads
    Given path '/aisp/accounts/availability'
    And headers {Authorization: 'invalidToken', 'Content-Type': 'application/json', 'x-fapi-auth-date': 'invalidDate', 'x-fapi-customer-ip-address': 'invalidIp', 'x-fapi-interaction-id': 'invalidInteractionId', 'Accept-Language': 'invalidLanguage'}
    And request {data: [{'paramName': 'invalidParam', 'paramValue': 'invalidValue'}]}
    When method post
    Then status 400
    And match response.id == '#string'
    And match response.errors[0].code == '#string'
    And match response.errors[0].causes == '#string'

  Scenario: Test POST /aisp/accounts/availability API with missing payloads
    Given path '/aisp/accounts/availability'
    And headers {Authorization: '', 'Content-Type': 'application/json', 'x-fapi-auth-date': '', 'x-fapi-customer-ip-address': '', 'x-fapi-interaction-id': '', 'Accept-Language': ''}
    And request {data: [{'paramName': '', 'paramValue': ''}]}
    When method post
    Then status 400
    And match response.id == '#string'
    And match response.errors[0].code == '#string'
    And match response.errors[0].causes == '#string'
