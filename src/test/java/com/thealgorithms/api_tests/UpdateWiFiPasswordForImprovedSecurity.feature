# ********RoostGPT********

# Test generated by RoostGPT for test Karate-Integration using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=5a02b01fca
# ROOST_METHOD_SIG_HASH=9c8324b0ac
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Update WiFi password for improved security',
#     steps: 'Given a customer with subscriber ID "SVTAL003" requests a WiFi password change\n' +
#       'When the support representative uses the configuration API to set a new WiFi password\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should be able to connect to the WiFi network with the new password',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: WiFi Troubleshooting for Fiber Internet Customers

  Background:
    * def APPOINTMENT_V2_80D7DADBB1_URL = karate.properties['APPOINTMENT_V2_80D7DADBB1_URL'] || karate.get('APPOINTMENT_V2_80D7DADBB1_URL', 'http://localhost:4010')
    * def APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN = karate.properties['APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN'] || karate.get('APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN', 'Bearer_Dummy_Token')

  Scenario: Update WiFi password for improved security
    * url APPOINTMENT_V2_80D7DADBB1_URL
    And path '/appointment/{appointmentId}'
    And header Authorization = APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN
    And request
      """
      {
        "appointment": {
          "reason": "WiFi password change",
          "slot": {
            "id": "new-slot-id"
          }
        }
      }
      """
    When method patch
    Then status 200
    And match response == { address: '#object', appointment: '#object', control: '#object', customer: '#object', order: '#object', products: '#object' }
    And match response.appointment.finishDate == '#string'
    And match response.appointment.id == '#string'
    And match response.appointment.priority == '#object'
    And match response.appointment.priority.flag == '#boolean'
    And match response.appointment.priority.reason == '#string'
    And match response.appointment.startDate == '#string'
    And match response.control.code == '#string'
    And match response.control.message == '#string'
    And match response.control.type == '#string'
    And match response.customer.subscriberId == 'SVTAL003'
    And match response.order.addressChange == '#object'
    And match response.order.addressChange.flag == '#boolean'
    And match response.order.associatedDocument == '#string'
    And match response.order.type == '#string'
    And match response.products.product == '#array'
    And match response.products.product[0] == '#object'
