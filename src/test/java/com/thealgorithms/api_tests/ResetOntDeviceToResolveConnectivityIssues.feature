# ********RoostGPT********

# Test generated by RoostGPT for test Karate-Integration using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=77709b3e66
# ROOST_METHOD_SIG_HASH=9efcbbb286
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Reset ONT device to resolve connectivity issues',
#     steps: 'Given a customer with subscriber ID "SVTAL002" reports intermittent internet connectivity\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate ONT connectivity issues\n' +
#       'When the support representative uses the configuration API to reset the GPON ONT\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report stable internet connectivity',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: WiFi Troubleshooting for Fiber Internet Customers

  Background:
    * def APPOINTMENT_V2_80D7DADBB1_URL = karate.properties['APPOINTMENT_V2_80D7DADBB1_URL'] || karate.get('APPOINTMENT_V2_80D7DADBB1_URL', 'http://localhost:4010')
    * def APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN = karate.properties['APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN'] || karate.get('APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN', 'Bearer_Dummy_Token')

  Scenario: Reset ONT device to resolve connectivity issues
    * url APPOINTMENT_V2_80D7DADBB1_URL
    And path '/appointmentConfirmation'
    And header Authorization = APPOINTMENT_V2_80D7DADBB1_AUTH_TOKEN
    And request
      """
      { 
        "appointment": { 
          "confirmation": true, 
          "id": "SVTAL002" 
        } 
      }
      """
    When method post
    Then status 200
    And match response contains
      """
      { 
        "control": "#object" 
      }
      """
    And match response.control.code == '#string'
    And match response.control.message == '#string'
    And match response.control.type == '#string'
